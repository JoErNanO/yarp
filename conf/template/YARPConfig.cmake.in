# Copyright: (C) 2009, 2010 RobotCub Consortium
# Authors: Paul Fitzpatrick, Giorgio Metta
# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT

if(NOT YARP_FOUND)

    # Give the details of YARP libraries, include path etc.
    set(YARP_LIBRARIES "@YARP_LIBRARIES@")
    set(YARP_INCLUDE_DIRS "@YARP_INCLUDE_DIRS@")
    set(YARP_LINK_DIRS "@YARP_LINK_DIRS@") # only needed with certain plugins
    set(YARP_DEFINES "@YARP_ALL_DEFINES@") # only needed if you use ACE directly
    set(YARP_BINDINGS "@YARP_BINDINGS@")

    # Check if deprecated methods are built
    set(YARP_NO_DEPRECATED @YARP_NO_DEPRECATED@)
    if(YARP_NO_DEPRECATED)
        add_definitions("-DYARP_NO_DEPRECATED")
    endif(YARP_NO_DEPRECATED)

    # Disable deprecated warnings
    # FIXME 2.4 re-enable these warnings before releasing YARP 2.4
    set(YARP_NO_DEPRECATED_WARNINGS TRUE)

    #
    set(YARP_MODULE_DIR "@YARP_MODULE_DIR@")
    set(YARP_MODULE_PATH "@YARP_MODULE_DIR@")
    if(${CMAKE_VERSION} VERSION_LESS 3.0.0)
       list(APPEND YARP_MODULE_PATH "@YARP_MODULE_DIR@/cmake-3.0.0/Modules")
    endif()
    if(NOT YARP_NO_DEPRECATED)
       list(APPEND YARP_MODULE_PATH "@YARP_MODULE_DIR@/deprecated")
    endif()

    # Install directories
    set(YARP_INSTALL_PREFIX "@YARP_INSTALL_PREFIX@")
    set(YARP_CONFIG_INSTALL_DIR "@YARP_CONFIG_INSTALL_DIR@")
    set(YARP_PLUGIN_MANIFESTS_INSTALL_DIR "@YARP_PLUGIN_MANIFESTS_INSTALL_DIR@")
    set(YARP_MODULES_INSTALL_DIR "@YARP_MODULES_INSTALL_DIR@")
    set(YARP_APPLICATIONS_INSTALL_DIR "@YARP_APPLICATIONS_INSTALL_DIR@")
    set(YARP_TEMPLATES_INSTALL_DIR "@YARP_TEMPLATES_INSTALL_DIR@")
    set(YARP_APPLICATIONS_TEMPLATES_INSTALL_DIR "@YARP_APPLICATIONS_TEMPLATES_INSTALL_DIR@")
    set(YARP_MODULES_TEMPLATES_INSTALL_DIR "@YARP_MODULES_TEMPLATES_INSTALL_DIR@")
    set(YARP_CONTEXTS_INSTALL_DIR "@YARP_CONTEXTS_INSTALL_DIR@")
    set(YARP_ROBOTS_INSTALL_DIR "@YARP_ROBOTS_INSTALL_DIR@")

    # Version
    set(YARP_VERSION_MAJOR "@YARP_VERSION_MAJOR@")
    set(YARP_VERSION_MINOR "@YARP_VERSION_MINOR@")
    set(YARP_VERSION_PATCH "@YARP_VERSION_PATCH@")
    set(YARP_VERSION_TWEAK "@YARP_VERSION_TWEAK@")
    set(YARP_VERSION "@YARP_VERSION@")
    set(YARP_VERSION_STRING "@YARP_VERSION_STRING@")
    set(YARP_VERSION_ABI "@YARP_VERSION_ABI@")

    # Pass along some compilation options that may be useful for clients
    # to check.
    set(YARP_HAS_MATH_LIB @YARP_HAS_MATH_LIB@)
    set(YARP_HAS_NAME_LIB @YARP_HAS_NAME_LIB@)
    set(YARP_HAS_MANAGER_LIB @YARP_HAS_MANAGER_LIB@)

    set(YARP_USE_ATLAS @YARP_USE_ATLAS@) # This is a math library option
    set(YARP_IS_SHARED_LIBRARY @CREATE_SHARED_LIBRARY@)

    # Check if IDL is available
    set(YARP_HAS_IDL @YARP_HAS_IDL@)
    set(YARP_IDL_BINARY_HINT "@YARP_IDL_BINARY_HINT@")

    if(NOT TARGET YARP::YARP_OS)
        include(${CMAKE_CURRENT_LIST_DIR}/YARPTargets.cmake)
    endif()

    # Export variables for available targets
    # FIXME 2.4 Use a namespace for exported targets
    set(YARP_OS_LIBRARY YARP::YARP_OS)
    set(YARP_SIG_LIBRARY YARP::YARP_sig)
    if(TARGET YARP::YARP_math)
        set(YARP_MATH_LIBRARY YARP::YARP_math)
    endif()
    set(YARP_DEV_LIBRARY YARP::YARP_dev)
    if(TARGET YARP::YARP_name)
        set(YARP_NAME_LIBRARY YARP::YARP_name)
    endif()
    set(YARP_INIT_LIBRARY YARP::YARP_init)
    if(TARGET YARP::YARP_manager)
        set(YARP_MATH_LIBRARY YARP::YARP_manager)
    endif()
endif(NOT YARP_FOUND)
